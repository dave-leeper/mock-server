{
  "mocks": [
    {
      "path": "/ping",
      "response": {"name":"My Server","version":"1.0"},
      "responseType": "JSON",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/json",
      "response": "./server-config.json",
      "responseType": "JSON",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/json-string-array",
      "response": ["./server-config.json", "./test/test-data.json"],
      "responseType": "JSON",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/json-object",
      "response": {"title": "Index"},
      "responseType": "JSON",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/json-object-array",
      "response": [{"title": "Index"}, {"title": "Not Found"} ],
      "responseType": "JSON",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/hbs",
      "response": "index.hbs",
      "responseType": "HBS",
      "hbsData": {"title": "Index"},
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/hbs-string-array",
      "response": [ "index.hbs", "not-found.hbs" ],
      "responseType": "HBS",
      "hbsData": [ {"title": "Index"}, {"title": "Not Found"} ],
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/text",
      "response": "./views/index.hbs",
      "responseType": "TEXT",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/text-string-array",
      "response": [ "./views/index.hbs", "./views/not-found.hbs" ],
      "responseType": "TEXT",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/text-object",
      "response": {"title": "Index"},
      "responseType": "TEXT",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/text-object2",
      "response": {"text": "Index"},
      "responseType": "TEXT",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/text-object-array",
      "response": [{"title": "Index"}, {"title": "Not Found"} ],
      "responseType": "TEXT",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/text-object-array2",
      "response": [{"text": "Index"}, {"text": "Not Found"} ],
      "responseType": "TEXT",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/uploadfile",
      "response": "upload.hbs",
      "responseType": "HBS",
      "hbsData": {"title": "Upload File"}
    },
    {
      "path": "/uploadElasticSearchMapping",
      "response": "upload-elasticsearch-mapping.hbs",
      "responseType": "HBS",
      "hbsData": {"title": "Upload ElasticSearch Mapping"}
    }
  ],
  "microservices": [
    {
      "path": "/mocks",
      "name": "Mock Services List",
      "description": "Provides a list of mock services registered with this server.",
      "serviceFile": "./microservices/mocks.js"
    },
    {
      "path": "/microservices",
      "name": "Microservices List",
      "description": "Provides a list of services registered with this server.",
      "serviceFile": "./microservices/microservices.js"
    },
    {
      "path": "/databaseconnections",
      "name": "Database Connection List",
      "description": "Provides a list of database connections registered with this server.",
      "serviceFile": "./microservices/databaseconnections.js"
    },
    {
      "path": "/download/:name",
      "name": "File Download",
      "description": "Downloads a file from the files directory of the server. The :name Parameter is the file name.",
      "serviceFile": "./microservices/download.js"
    },
    {
      "verb": "POST",
      "path": "/upload",
      "name": "File Upload",
      "description": "Uploads a file from the client. The file was specified using upload.hbs",
      "serviceFile": "./microservices/upload.js"
    },
    {
      "verb": "POST",
      "path": "/uploadElasticSearchMapping",
      "name": "File Upload",
      "description": "Uploads a mapping for an ElasticSearch index. The file was specified using upload-elasticsearch-mapping.hbs",
      "serviceFile": "./microservices/upload.js"
    },
    {
      "path": "/throw",
      "name": "Throw Exception",
      "description": "A micro service that throws an exception. For testing purposes.",
      "serviceFile": "./microservices/throw.js"
    },
    {
      "path": "/stop",
      "name": "Server Stop",
      "description": "Shuts down the server.",
      "serviceFile": "./microservices/stop.js"
    }
  ],
  "databaseConnections" : [
    {
      "name": "elasticsearch",
      "description": "Elasticsearch service.",
      "databaseConnector": "elasticsearch.js",
      "generateConnectionAPI": true,
      "generateTableAPI": true,
      "config": {
        "host": "localhost:9200",
        "log": "trace"
      }
    }
  ]
}
