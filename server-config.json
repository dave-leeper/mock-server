{
  "logging": {
    "appenders": {
      "out": { "type": "stdout" },
      "app": { "type": "file", "filename": "application.log" }
    },
    "categories": {
      "default":
      {
        "appenders": ["out", "app"],
        "level" : "debug"
      }
    }
  },
  "mocks": [
    {
      "path": "/ping",
      "response": {"name":"My Server","version":"1.0"},
      "responseType": "JSON",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/json",
      "response": "./server-config.json",
      "responseType": "JSON",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/json-string-array",
      "response": ["./server-config.json", "./test/test-data.json"],
      "responseType": "JSON",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/json-object",
      "response": {"title": "Index"},
      "responseType": "JSON",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/json-object-array",
      "response": [{"title": "Index"}, {"title": "Not Found"} ],
      "responseType": "JSON",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/hbs",
      "response": "index.hbs",
      "responseType": "HBS",
      "hbsData": {"title": "Index"},
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/hbs-string-array",
      "response": [ "index.hbs", "error.hbs" ],
      "responseType": "HBS",
      "hbsData": [ {"title": "Index"}, {"title": "Not Found"} ],
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/text",
      "response": "./views/index.hbs",
      "responseType": "TEXT",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/text-string-array",
      "response": [ "./views/index.hbs", "./views/error.hbs" ],
      "responseType": "TEXT",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/text-object",
      "response": {"title": "Index"},
      "responseType": "TEXT",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/text-object2",
      "response": {"text": "Index"},
      "responseType": "TEXT",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/text-object-array",
      "response": [{"title": "Index"}, {"title": "Not Found"} ],
      "responseType": "TEXT",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/text-object-array2",
      "response": [{"text": "Index"}, {"text": "Not Found"} ],
      "responseType": "TEXT",
      "headers": [ { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/uploadfile",
      "response": "upload.hbs",
      "responseType": "HBS",
      "hbsData": {"title": "Upload File", "action": "upload", "verb": "POST"}
    },
    {
      "path": "/elasticsearch/index/upload",
      "response": "upload.hbs",
      "responseType": "HBS",
      "hbsData": {"title": "Upload ElasticSearch Index", "action": "/elasticsearch/index", "verb": "POST"}
    },
    {
      "path": "/elasticsearch/index/mapping/upload",
      "response": "upload.hbs",
      "responseType": "HBS",
      "hbsData": {"title": "Upload ElasticSearch Mapping", "action": "/elasticsearch/index/mapping", "verb": "POST"}
    },
    {
      "path": "/elasticsearch/data/upload",
      "response": "upload.hbs",
      "responseType": "HBS",
      "hbsData": {"title": "Upload ElasticSearch Data", "action": "/elasticsearch/data", "verb": "POST"}
    },
    {
      "path": "/elasticsearch/data/update",
      "response": "upload.hbs",
      "responseType": "HBS",
      "hbsData": {"title": "Update ElasticSearch Data", "action": "/elasticsearch/data/update", "verb": "POST"}
    },
    {
      "path": "/feed",
      "response": "./files/feed.json",
      "responseType": "JSON",
      "headers": [ { "header": "Access-Control-Allow-Origin", "value": "*" }, { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/post/creator",
      "response": "./files/post.creator.json",
      "responseType": "JSON",
      "headers": [ { "header": "Access-Control-Allow-Origin", "value": "*" }, { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/profile",
      "response": "./files/profile.json",
      "responseType": "JSON",
      "headers": [ { "header": "Access-Control-Allow-Origin", "value": "*" }, { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/notification",
      "response": ["./files/notifications.json", "./files/notifications2.json"],
      "responseType": "JSON",
      "headers": [ { "header": "Access-Control-Allow-Origin", "value": "*" }, { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "verb": "DELETE",
      "path": "/notification",
      "response": { "status": 200 },
      "responseType": "JSON",
      "headers": [ { "header": "Access-Control-Allow-Origin", "value": "*" }, { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "verb": "DELETE",
      "path": "/notification/:id",
      "response": { "status": 200 },
      "responseType": "JSON",
      "headers": [ { "header": "Access-Control-Allow-Origin", "value": "*" }, { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/search",
      "response": "./files/search.json",
      "responseType": "JSON",
      "headers": [ { "header": "Access-Control-Allow-Origin", "value": "*" }, { "header": "MY_HEADER", "value": "MY_HEADER_VALUE" } ]
    },
    {
      "path": "/Talkr/comment",
      "response": "./files/comments.json",
      "responseType": "JSON",
      "headers": [ { "header": "Access-Control-Allow-Origin", "value": "*" } ]
    },
    {
      "path": "/Talkr/photo",
      "response": "./files/:id",
      "responseType": "BLOB",
      "headers": [ { "header": "Access-Control-Allow-Origin", "value": "*" } ]
    }
  ],
  "microservices": [
    {
      "path": "/mocks",
      "name": "Mock Services List",
      "description": "Provides a list of mock services registered with this server.",
      "serviceFile": "mocks.js"
    },
    {
      "path": "/microservices",
      "name": "Microservices List",
      "description": "Provides a list of services registered with this server.",
      "serviceFile": "microservices.js"
    },
    {
      "path": "/databaseconnections",
      "name": "Database Connection List",
      "description": "Provides a list of database connections registered with this server.",
      "serviceFile": "databaseconnections.js"
    },
    {
      "path": "/download/:name",
      "name": "File Download",
      "description": "Downloads a file from the files directory of the server. The :name Parameter is the file name.",
      "serviceFile": "download.js"
    },
    {
      "verb": "POST",
      "path": "/upload",
      "name": "File Upload",
      "description": "Uploads a file from the client. The file was specified using upload.hbs",
      "serviceFile": "upload.js"
    },
    {
      "path": "/log",
      "name": "Body To Log",
      "description": "Prints a request's body to the log. Ensure that server logging is configured.",
      "serviceFile": "body-to-log.js",
      "serviceData": { "level": "DEBUG", "json": true }
    },
    {
      "path": "/throw",
      "name": "Throw Exception",
      "description": "A micro service that throws an exception. For testing purposes.",
      "serviceFile": "throw.js"
    },
    {
      "path": "/stop",
      "name": "Server Stop",
      "description": "Shuts down the server.",
      "serviceFile": "stop.js"
    }
  ],
  "databaseConnections" : [
    {
      "name": "elasticsearch",
      "description": "Elasticsearch service.",
      "databaseConnector": "elasticsearch.js",
      "generateConnectionAPI": true,
      "generateIndexAPI": true,
      "generateDataAPI": true,
      "config": {
        "host": "localhost:9200",
        "log": "trace"
      }
    }
  ]
}
